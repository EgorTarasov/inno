FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Copy package files
COPY package.json package-lock.json* yarn.lock* ./
RUN \
  if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
  elif [ -f package-lock.json ]; then npm ci; \
  else npm i; \
  fi

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Disable telemetry during build
ENV NEXT_TELEMETRY_DISABLED 1

# Configure Next.js to ignore TypeScript errors during build
ENV NEXT_TYPESCRIPT_IGNORE_ERRORS true
ENV TYPESCRIPT_SKIP_ERRORS true
ENV NODE_OPTIONS="--max-old-space-size=4096"

# Build Next.js with forced build (ignore TS errors)
RUN \
  if [ -f yarn.lock ]; then NEXT_TELEMETRY_DISABLED=1 yarn build --no-lint || yarn build --no-lint --force; \
  elif [ -f package-lock.json ]; then NEXT_TELEMETRY_DISABLED=1 npm run build --no-lint || npm run build --no-lint --force; \
  else npm run build --no-lint || npm run build --no-lint --force; \
  fi

# If you need to generate Prisma client, uncomment these lines
# RUN \
#   if [ -f yarn.lock ]; then yarn prisma generate; \
#   elif [ -f package-lock.json ]; then npx prisma generate; \
#   else npm run prisma generate; \
#   fi

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy necessary files
COPY --from=builder /app/public ./public

# Set the correct permission for prerender cache
RUN mkdir -p .next
RUN chown nextjs:nodejs .next

# Copy .next folder with proper permissions
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/next.config.js ./next.config.js

# For standalone output mode if enabled in next.config.js
# COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
# COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV PORT 3000

# Start the Next.js application
CMD ["node_modules/.bin/next", "start"]